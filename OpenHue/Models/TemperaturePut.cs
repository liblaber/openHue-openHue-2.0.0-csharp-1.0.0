// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;
using OpenHue.Json;

namespace OpenHue.Models;

public record TemperaturePut(
    /// <value>Type of the supported resources (always `temperature` here)</value>
    [property:
        JsonPropertyName("type"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        TemperaturePut.TemperaturePutType? Type_ = null,
    /// <value>true when sensor is activated, false when deactivated</value>
    [property:
        JsonPropertyName("enabled"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        bool? Enabled = null
)
{
    /// <summary>Type of the supported resources (always `temperature` here)</summary>
    public record TemperaturePutType : ValueEnum<string>
    {
        internal TemperaturePutType(string value)
            : base(value) { }

        public TemperaturePutType()
            : base("temperature") { }

        public static TemperaturePutType Temperature = new("temperature");
    }
}
