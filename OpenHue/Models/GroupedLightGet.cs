// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;

namespace OpenHue.Models;

public record GroupedLightGet(
    /// <value>Type of the supported resources</value>
    [property:
        JsonPropertyName("type"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? Type_ = null,
    /// <value>Unique identifier representing a specific resource instance</value>
    [property: JsonPropertyName("id"), JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        string? Id = null,
    /// <value>Clip v1 resource identifier</value>
    [property:
        JsonPropertyName("id_v1"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? IdV1 = null,
    [property:
        JsonPropertyName("owner"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        ResourceIdentifier? Owner = null,
    [property: JsonPropertyName("on"), JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        On? On = null,
    [property:
        JsonPropertyName("dimming"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        Dimming? Dimming = null,
    /// <value>Joined alert control</value>
    [property:
        JsonPropertyName("alert"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        GroupedLightGet.GroupedLightGetAlert? Alert = null,
    /// <value>Feature containing basic signaling properties.</value>
    [property:
        JsonPropertyName("signaling"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        GroupedLightGet.GroupedLightGetSignaling? Signaling = null
)
{
    /// <summary>Joined alert control</summary>
    public record GroupedLightGetAlert(
        [property:
            JsonPropertyName("action_values"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            List<string>? ActionValues = null
    );

    /// <summary>Feature containing basic signaling properties.</summary>
    public record GroupedLightGetSignaling(
        /// <value>Signals that the light supports.</value>
        [property:
            JsonPropertyName("signal_values"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            List<SupportedSignals>? SignalValues = null
    );
}
