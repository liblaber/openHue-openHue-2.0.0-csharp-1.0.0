// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;
using OpenHue.Json;

namespace OpenHue.Models;

/// <summary>Feature containing basic signaling properties.</summary>
public record Signaling(
    /// <value>
    /// - `no_signal`: No signal is active. Write “no_signal” to stop active signal.
    /// - `on_off`: Toggles between max brightness and Off in fixed color.
    /// - `on_off_color`: Toggles between off and max brightness with color provided.
    /// - `alternating`: Alternates between 2 provided colors.
    /// </value>
    [property:
        JsonPropertyName("signal"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        Signaling.Signal? Signal_ = null,
    /// <value>
    /// Duration has a max of 65534000 ms and a stepsize of 1 second.
    /// Values inbetween steps will be rounded.
    /// Duration is ignored for `no_signal`.
    /// </value>
    [property:
        JsonPropertyName("duration"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        long? Duration = null,
    /// <value>List of colors to apply to the signal (not supported by all signals)</value>
    [property:
        JsonPropertyName("color"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        List<Color>? Color = null
)
{
    /// <summary>
    /// - `no_signal`: No signal is active. Write “no_signal” to stop active signal.
    /// - `on_off`: Toggles between max brightness and Off in fixed color.
    /// - `on_off_color`: Toggles between off and max brightness with color provided.
    /// - `alternating`: Alternates between 2 provided colors.
    /// </summary>
    public record Signal : ValueEnum<string>
    {
        internal Signal(string value)
            : base(value) { }

        public Signal()
            : base("no_signal") { }

        public static Signal NoSignal = new("no_signal");
        public static Signal OnOff = new("on_off");
        public static Signal OnOffColor = new("on_off_color");
        public static Signal Alternating = new("alternating");
    }
}
