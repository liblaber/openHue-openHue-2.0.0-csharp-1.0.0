// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;
using OpenHue.Json;

namespace OpenHue.Models;

public record ScenePost(
    /// <value>List of actions to be executed synchronously on recall</value>
    [property: JsonPropertyName("actions")]
        List<ActionPost> Actions,
    [property: JsonPropertyName("metadata")] SceneMetadata Metadata,
    [property: JsonPropertyName("group")] ResourceIdentifier Group,
    [property:
        JsonPropertyName("type"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        ScenePost.ScenePostType? Type_ = null,
    /// <value>Group of colors that describe the palette of colors to be used when playing dynamics</value>
    [property:
        JsonPropertyName("palette"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        ScenePalette? Palette = null,
    /// <value>Speed of dynamic palette for this scene</value>
    [property:
        JsonPropertyName("speed"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        double? Speed = null,
    /// <value>Indicates whether to automatically start the scene dynamically on active recall</value>
    [property:
        JsonPropertyName("auto_dynamic"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        bool? AutoDynamic = null
)
{
    public record ScenePostType : ValueEnum<string>
    {
        internal ScenePostType(string value)
            : base(value) { }

        public ScenePostType()
            : base("scene") { }

        public static ScenePostType Scene = new("scene");
    }
}
