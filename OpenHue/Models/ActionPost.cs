// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;

namespace OpenHue.Models;

public record ActionPost(
    [property: JsonPropertyName("target")] ResourceIdentifier Target,
    /// <value>The action to be executed on recall</value>
    [property: JsonPropertyName("action")]
        ActionPost.ActionPostAction Action
)
{
    /// <summary>The action to be executed on recall</summary>
    public record ActionPostAction(
        [property:
            JsonPropertyName("on"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            On? On = null,
        [property:
            JsonPropertyName("dimming"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            Dimming? Dimming = null,
        [property:
            JsonPropertyName("color"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            Color? Color = null,
        [property:
            JsonPropertyName("color_temperature"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            ActionPostAction.ActionColorTemperature? ColorTemperature = null,
        /// <value>Basic feature containing gradient properties.</value>
        [property:
            JsonPropertyName("gradient"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            Gradient? Gradient = null,
        /// <value>Basic feature containing effect properties.</value>
        [property:
            JsonPropertyName("effects"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            ActionPostAction.ActionEffects2? Effects = null,
        [property:
            JsonPropertyName("dynamics"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            Dynamics2? Dynamics = null
    )
    {
        public record ActionColorTemperature(
            /// <value>color temperature in mirek or null when the light color is not in the ct spectrum</value>
            [property:
                JsonPropertyName("mirek"),
                JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
            ]
                long? Mirek = null
        );

        /// <summary>Basic feature containing effect properties.</summary>
        public record ActionEffects2(
            [property:
                JsonPropertyName("effect"),
                JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
            ]
                SupportedEffects? Effect = null
        );
    }
}
