// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;

namespace OpenHue.Models;

public record ProductData(
    /// <value>Unique identification of device model</value>
    [property:
        JsonPropertyName("model_id"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? ModelId = null,
    /// <value>Name of device manufacturer</value>
    [property:
        JsonPropertyName("manufacturer_name"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? ManufacturerName = null,
    /// <value>Name of the product</value>
    [property:
        JsonPropertyName("product_name"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? ProductName = null,
    /// <value>The default archetype given by manufacturer. Can be changed by user.</value>
    [property:
        JsonPropertyName("product_archetype"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        ProductArchetype? ProductArchetype = null,
    /// <value>This device is Hue certified</value>
    [property:
        JsonPropertyName("certified"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        bool? Certified = null,
    /// <value>Software version of the product</value>
    [property:
        JsonPropertyName("software_version"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? SoftwareVersion = null,
    /// <value>Hardware type; identified by Manufacturer code and ImageType</value>
    [property:
        JsonPropertyName("hardware_platform_type"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? HardwarePlatformType = null
);
