// This file was generated by liblab | https://liblab.com/

using System.Net.Http.Json;
using OpenHue.Http;
using OpenHue.Http.Serialization;
using OpenHue.Models;

namespace OpenHue.Services;

public class AuthService : BaseService
{
    internal AuthService(HttpClient httpClient)
        : base(httpClient) { }

    /// <summary>Authenticate to retrieve the HUE application key. Requires to go and press the button on the bridge</summary>
    public async Task<List<Response_>> AuthenticateAsync(
        AuthenticateRequest input,
        CancellationToken cancellationToken = default
    )
    {
        ArgumentNullException.ThrowIfNull(input, nameof(input));

        var request = new RequestBuilder(HttpMethod.Post, "api")
            .SetContentAsJson(input, _jsonSerializerOptions)
            .Build();

        var response = await _httpClient
            .SendAsync(request, cancellationToken)
            .ConfigureAwait(false);
        response.EnsureSuccessStatusCode();

        return await response
                .Content.ReadFromJsonAsync<List<Response_>>(
                    _jsonSerializerOptions,
                    cancellationToken
                )
                .ConfigureAwait(false) ?? throw new Exception("Failed to deserialize response.");
    }
}
