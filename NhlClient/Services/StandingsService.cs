// This file was generated by liblab | https://liblab.com/

using System.Net.Http.Json;
using NhlClient.Http;
using NhlClient.Http.Exceptions;
using NhlClient.Http.Extensions;
using NhlClient.Http.Serialization;

namespace NhlClient.Services;

public class StandingsService : BaseService
{
    internal StandingsService(HttpClient httpClient)
        : base(httpClient) { }

    /// <summary>Retrieve the standings as of the current moment.</summary>
    public async Task<object> GetCurrentStandingsAsync(
        CancellationToken cancellationToken = default
    )
    {
        var request = new RequestBuilder(HttpMethod.Get, "v1/standings/now").Build();

        var response = await _httpClient
            .SendAsync(request, cancellationToken)
            .ConfigureAwait(false);

        return await response
                .EnsureSuccessfulResponse()
                .Content.ReadFromJsonAsync<object>(_jsonSerializerOptions, cancellationToken)
                .ConfigureAwait(false) ?? throw new Exception("Failed to deserialize response.");
    }

    /// <summary>Retrieve the standings for a specific date.</summary>
    /// <param name="date">Date in YYYY-MM-DD format</param>
    public async Task<object> GetStandingsByDateAsync(
        string date,
        CancellationToken cancellationToken = default
    )
    {
        ArgumentNullException.ThrowIfNull(date, nameof(date));

        var request = new RequestBuilder(HttpMethod.Get, "v1/standings/{date}")
            .SetPathParameter("date", date)
            .Build();

        var response = await _httpClient
            .SendAsync(request, cancellationToken)
            .ConfigureAwait(false);

        return await response
                .EnsureSuccessfulResponse()
                .Content.ReadFromJsonAsync<object>(_jsonSerializerOptions, cancellationToken)
                .ConfigureAwait(false) ?? throw new Exception("Failed to deserialize response.");
    }

    /// <summary>Retrieves information for each season's standings.</summary>
    public async Task<object> GetStandingsSeasonAsync(CancellationToken cancellationToken = default)
    {
        var request = new RequestBuilder(HttpMethod.Get, "v1/standings-season").Build();

        var response = await _httpClient
            .SendAsync(request, cancellationToken)
            .ConfigureAwait(false);

        return await response
                .EnsureSuccessfulResponse()
                .Content.ReadFromJsonAsync<object>(_jsonSerializerOptions, cancellationToken)
                .ConfigureAwait(false) ?? throw new Exception("Failed to deserialize response.");
    }
}
